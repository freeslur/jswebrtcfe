
  /**
   * @license
   * jswebrtcfe.js v1.0.0
   * Released under the MIT License.
   */

(function () {
  'use strict';

  // import { io } from "socket.io-client";
  // const socket = io();
  const myFace = document.getElementById("myFace");
  const muteBtn = document.getElementById("mute");
  const cameraBtn = document.getElementById("camera");
  document.getElementById("cameras");
  let myStream;
  let muted = false;
  let cameraOff = false;

  async function getCameras() {
    try {
      const devices = navigator.mediaDevices.enumerateDevices();
      const cameras = (await devices).filter(device => device.kind == "videoinput");
      console.log(cameras);
    } catch (e) {
      console.log(e);
    }
  }

  async function getMedia() {
    try {
      myStream = await navigator.mediaDevices.getUserMedia({
        audio: true,
        video: true
      });
      myFace.srcObject = myStream;
      await getCameras();
    } catch (e) {
      console.log(e.message);
    }
  }

  getMedia();
  muteBtn.addEventListener("click", () => {
    myStream.getAudioTracks().forEach(track => {
      track.enabled = !track.enabled;
    });

    if (!muted) {
      muteBtn.innerText = "Unmute";
      muted = true;
    } else {
      muteBtn.innerText = "Mute";
      muted = false;
    }
  });
  cameraBtn.addEventListener("click", () => {
    myStream.getVideoTracks().forEach(track => {
      track.enabled = !track.enabled;
    });

    if (!cameraOff) {
      cameraBtn.innerText = "Turn Camera On";
      cameraOff = true;
    } else {
      cameraBtn.innerText = "Turn Camera Off";
      cameraOff = false;
    }
  });

})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyIuLi8uLi9zcmMvanMvYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IGlvIH0gZnJvbSBcInNvY2tldC5pby1jbGllbnRcIjtcblxuLy8gY29uc3Qgc29ja2V0ID0gaW8oKTtcbmNvbnN0IG15RmFjZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlGYWNlXCIpO1xuY29uc3QgbXV0ZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXV0ZVwiKTtcbmNvbnN0IGNhbWVyYUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FtZXJhXCIpO1xuY29uc3QgY2FtZXJhc1NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FtZXJhc1wiKTtcblxubGV0IG15U3RyZWFtO1xubGV0IG11dGVkID0gZmFsc2U7XG5sZXQgY2FtZXJhT2ZmID0gZmFsc2U7XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENhbWVyYXMoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgZGV2aWNlcyA9IG5hdmlnYXRvci5tZWRpYURldmljZXMuZW51bWVyYXRlRGV2aWNlcygpO1xuICAgIGNvbnN0IGNhbWVyYXMgPSAoYXdhaXQgZGV2aWNlcykuZmlsdGVyKChkZXZpY2UpID0+IGRldmljZS5raW5kID09IFwidmlkZW9pbnB1dFwiKTtcbiAgICBjb25zb2xlLmxvZyhjYW1lcmFzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUubG9nKGUpO1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldE1lZGlhKCkge1xuICB0cnkge1xuICAgIG15U3RyZWFtID0gYXdhaXQgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoe1xuICAgICAgYXVkaW86IHRydWUsXG4gICAgICB2aWRlbzogdHJ1ZSxcbiAgICB9KTtcbiAgICBteUZhY2Uuc3JjT2JqZWN0ID0gbXlTdHJlYW07XG4gICAgYXdhaXQgZ2V0Q2FtZXJhcygpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coZS5tZXNzYWdlKTtcbiAgfVxufVxuXG5nZXRNZWRpYSgpO1xuXG5tdXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIG15U3RyZWFtLmdldEF1ZGlvVHJhY2tzKCkuZm9yRWFjaCgodHJhY2spID0+IHtcbiAgICB0cmFjay5lbmFibGVkID0gIXRyYWNrLmVuYWJsZWQ7XG4gIH0pO1xuICBpZiAoIW11dGVkKSB7XG4gICAgbXV0ZUJ0bi5pbm5lclRleHQgPSBcIlVubXV0ZVwiO1xuICAgIG11dGVkID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBtdXRlQnRuLmlubmVyVGV4dCA9IFwiTXV0ZVwiO1xuICAgIG11dGVkID0gZmFsc2U7XG4gIH1cbn0pO1xuY2FtZXJhQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIG15U3RyZWFtLmdldFZpZGVvVHJhY2tzKCkuZm9yRWFjaCgodHJhY2spID0+IHtcbiAgICB0cmFjay5lbmFibGVkID0gIXRyYWNrLmVuYWJsZWQ7XG4gIH0pO1xuICBpZiAoIWNhbWVyYU9mZikge1xuICAgIGNhbWVyYUJ0bi5pbm5lclRleHQgPSBcIlR1cm4gQ2FtZXJhIE9uXCI7XG4gICAgY2FtZXJhT2ZmID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBjYW1lcmFCdG4uaW5uZXJUZXh0ID0gXCJUdXJuIENhbWVyYSBPZmZcIjtcbiAgICBjYW1lcmFPZmYgPSBmYWxzZTtcbiAgfVxufSk7XG4iXSwibmFtZXMiOlsibXlGYWNlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIm11dGVCdG4iLCJjYW1lcmFCdG4iLCJteVN0cmVhbSIsIm11dGVkIiwiY2FtZXJhT2ZmIiwiZ2V0Q2FtZXJhcyIsImRldmljZXMiLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJlbnVtZXJhdGVEZXZpY2VzIiwiY2FtZXJhcyIsImZpbHRlciIsImRldmljZSIsImtpbmQiLCJjb25zb2xlIiwibG9nIiwiZSIsImdldE1lZGlhIiwiZ2V0VXNlck1lZGlhIiwiYXVkaW8iLCJ2aWRlbyIsInNyY09iamVjdCIsIm1lc3NhZ2UiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2V0QXVkaW9UcmFja3MiLCJmb3JFYWNoIiwidHJhY2siLCJlbmFibGVkIiwiaW5uZXJUZXh0IiwiZ2V0VmlkZW9UcmFja3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7RUFBQTtFQUVBO0VBQ0EsTUFBTUEsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsUUFBeEIsQ0FBZjtFQUNBLE1BQU1DLE9BQU8sR0FBR0YsUUFBUSxDQUFDQyxjQUFULENBQXdCLE1BQXhCLENBQWhCO0VBQ0EsTUFBTUUsU0FBUyxHQUFHSCxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsUUFBeEIsQ0FBbEI7RUFDc0JELFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixTQUF4QjtFQUV0QixJQUFJRyxRQUFKO0VBQ0EsSUFBSUMsS0FBSyxHQUFHLEtBQVo7RUFDQSxJQUFJQyxTQUFTLEdBQUcsS0FBaEI7O0VBRUEsZUFBZUMsVUFBZixHQUE0QjtFQUMxQixNQUFJO0VBQ0YsVUFBTUMsT0FBTyxHQUFHQyxTQUFTLENBQUNDLFlBQVYsQ0FBdUJDLGdCQUF2QixFQUFoQjtFQUNBLFVBQU1DLE9BQU8sR0FBRyxDQUFDLE1BQU1KLE9BQVAsRUFBZ0JLLE1BQWhCLENBQXdCQyxNQUFELElBQVlBLE1BQU0sQ0FBQ0MsSUFBUCxJQUFlLFlBQWxELENBQWhCO0VBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTCxPQUFaO0VBQ0QsR0FKRCxDQUlFLE9BQU9NLENBQVAsRUFBVTtFQUNWRixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsQ0FBWjtFQUNEO0VBQ0Y7O0VBRUQsZUFBZUMsUUFBZixHQUEwQjtFQUN4QixNQUFJO0VBQ0ZmLElBQUFBLFFBQVEsR0FBRyxNQUFNSyxTQUFTLENBQUNDLFlBQVYsQ0FBdUJVLFlBQXZCLENBQW9DO0VBQ25EQyxNQUFBQSxLQUFLLEVBQUUsSUFENEM7RUFFbkRDLE1BQUFBLEtBQUssRUFBRTtFQUY0QyxLQUFwQyxDQUFqQjtFQUlBdkIsSUFBQUEsTUFBTSxDQUFDd0IsU0FBUCxHQUFtQm5CLFFBQW5CO0VBQ0EsVUFBTUcsVUFBVSxFQUFoQjtFQUNELEdBUEQsQ0FPRSxPQUFPVyxDQUFQLEVBQVU7RUFDVkYsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLENBQUMsQ0FBQ00sT0FBZDtFQUNEO0VBQ0Y7O0VBRURMLFFBQVE7RUFFUmpCLE9BQU8sQ0FBQ3VCLGdCQUFSLENBQXlCLE9BQXpCLEVBQWtDLE1BQU07RUFDdENyQixFQUFBQSxRQUFRLENBQUNzQixjQUFULEdBQTBCQyxPQUExQixDQUFtQ0MsS0FBRCxJQUFXO0VBQzNDQSxJQUFBQSxLQUFLLENBQUNDLE9BQU4sR0FBZ0IsQ0FBQ0QsS0FBSyxDQUFDQyxPQUF2QjtFQUNELEdBRkQ7O0VBR0EsTUFBSSxDQUFDeEIsS0FBTCxFQUFZO0VBQ1ZILElBQUFBLE9BQU8sQ0FBQzRCLFNBQVIsR0FBb0IsUUFBcEI7RUFDQXpCLElBQUFBLEtBQUssR0FBRyxJQUFSO0VBQ0QsR0FIRCxNQUdPO0VBQ0xILElBQUFBLE9BQU8sQ0FBQzRCLFNBQVIsR0FBb0IsTUFBcEI7RUFDQXpCLElBQUFBLEtBQUssR0FBRyxLQUFSO0VBQ0Q7RUFDRixDQVhEO0VBWUFGLFNBQVMsQ0FBQ3NCLGdCQUFWLENBQTJCLE9BQTNCLEVBQW9DLE1BQU07RUFDeENyQixFQUFBQSxRQUFRLENBQUMyQixjQUFULEdBQTBCSixPQUExQixDQUFtQ0MsS0FBRCxJQUFXO0VBQzNDQSxJQUFBQSxLQUFLLENBQUNDLE9BQU4sR0FBZ0IsQ0FBQ0QsS0FBSyxDQUFDQyxPQUF2QjtFQUNELEdBRkQ7O0VBR0EsTUFBSSxDQUFDdkIsU0FBTCxFQUFnQjtFQUNkSCxJQUFBQSxTQUFTLENBQUMyQixTQUFWLEdBQXNCLGdCQUF0QjtFQUNBeEIsSUFBQUEsU0FBUyxHQUFHLElBQVo7RUFDRCxHQUhELE1BR087RUFDTEgsSUFBQUEsU0FBUyxDQUFDMkIsU0FBVixHQUFzQixpQkFBdEI7RUFDQXhCLElBQUFBLFNBQVMsR0FBRyxLQUFaO0VBQ0Q7RUFDRixDQVhEOzs7Ozs7In0=
