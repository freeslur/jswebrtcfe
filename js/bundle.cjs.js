
  /**
   * @license
   * jswebrtcfe.js v1.0.0
   * Released under the MIT License.
   */

'use strict';

// import { io } from "socket.io-client";
// const socket = io();
const myFace = document.getElementById("myFace");
const muteBtn = document.getElementById("mute");
const cameraBtn = document.getElementById("camera");
let myStream;
let muted = false;
let cameraOff = false;

async function getCameras() {
  try {
    const devices = navigator.mediaDevices.enumerateDevices();
    console.log(devices);
  } catch (e) {
    console.log(e);
  }
}

async function getMedia() {
  try {
    myStream = await navigator.mediaDevices.getUserMedia({
      audio: true,
      video: true
    });
    myFace.srcObject = myStream;
    await getCameras();
  } catch (e) {
    console.log(e.message);
  }
}

getMedia();
muteBtn.addEventListener("click", () => {
  myStream.getAudioTracks().forEach(track => {
    track.enabled = !track.enabled;
  });

  if (!muted) {
    muteBtn.innerText = "Unmute";
    muted = true;
  } else {
    muteBtn.innerText = "Mute";
    muted = false;
  }
});
cameraBtn.addEventListener("click", () => {
  myStream.getVideoTracks().forEach(track => {
    track.enabled = !track.enabled;
  });

  if (!cameraOff) {
    cameraBtn.innerText = "Turn Camera On";
    cameraOff = true;
  } else {
    cameraBtn.innerText = "Turn Camera Off";
    cameraOff = false;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmNqcy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzL2FwcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBpbyB9IGZyb20gXCJzb2NrZXQuaW8tY2xpZW50XCI7XG5cbi8vIGNvbnN0IHNvY2tldCA9IGlvKCk7XG5jb25zdCBteUZhY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm15RmFjZVwiKTtcbmNvbnN0IG11dGVCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm11dGVcIik7XG5jb25zdCBjYW1lcmFCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbWVyYVwiKTtcblxubGV0IG15U3RyZWFtO1xubGV0IG11dGVkID0gZmFsc2U7XG5sZXQgY2FtZXJhT2ZmID0gZmFsc2U7XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENhbWVyYXMoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgZGV2aWNlcyA9IG5hdmlnYXRvci5tZWRpYURldmljZXMuZW51bWVyYXRlRGV2aWNlcygpO1xuICAgIGNvbnNvbGUubG9nKGRldmljZXMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coZSk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TWVkaWEoKSB7XG4gIHRyeSB7XG4gICAgbXlTdHJlYW0gPSBhd2FpdCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7XG4gICAgICBhdWRpbzogdHJ1ZSxcbiAgICAgIHZpZGVvOiB0cnVlLFxuICAgIH0pO1xuICAgIG15RmFjZS5zcmNPYmplY3QgPSBteVN0cmVhbTtcbiAgICBhd2FpdCBnZXRDYW1lcmFzKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmxvZyhlLm1lc3NhZ2UpO1xuICB9XG59XG5cbmdldE1lZGlhKCk7XG5cbm11dGVCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgbXlTdHJlYW0uZ2V0QXVkaW9UcmFja3MoKS5mb3JFYWNoKCh0cmFjaykgPT4ge1xuICAgIHRyYWNrLmVuYWJsZWQgPSAhdHJhY2suZW5hYmxlZDtcbiAgfSk7XG4gIGlmICghbXV0ZWQpIHtcbiAgICBtdXRlQnRuLmlubmVyVGV4dCA9IFwiVW5tdXRlXCI7XG4gICAgbXV0ZWQgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIG11dGVCdG4uaW5uZXJUZXh0ID0gXCJNdXRlXCI7XG4gICAgbXV0ZWQgPSBmYWxzZTtcbiAgfVxufSk7XG5jYW1lcmFCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgbXlTdHJlYW0uZ2V0VmlkZW9UcmFja3MoKS5mb3JFYWNoKCh0cmFjaykgPT4ge1xuICAgIHRyYWNrLmVuYWJsZWQgPSAhdHJhY2suZW5hYmxlZDtcbiAgfSk7XG4gIGlmICghY2FtZXJhT2ZmKSB7XG4gICAgY2FtZXJhQnRuLmlubmVyVGV4dCA9IFwiVHVybiBDYW1lcmEgT25cIjtcbiAgICBjYW1lcmFPZmYgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIGNhbWVyYUJ0bi5pbm5lclRleHQgPSBcIlR1cm4gQ2FtZXJhIE9mZlwiO1xuICAgIGNhbWVyYU9mZiA9IGZhbHNlO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6WyJteUZhY2UiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwibXV0ZUJ0biIsImNhbWVyYUJ0biIsIm15U3RyZWFtIiwibXV0ZWQiLCJjYW1lcmFPZmYiLCJnZXRDYW1lcmFzIiwiZGV2aWNlcyIsIm5hdmlnYXRvciIsIm1lZGlhRGV2aWNlcyIsImVudW1lcmF0ZURldmljZXMiLCJjb25zb2xlIiwibG9nIiwiZSIsImdldE1lZGlhIiwiZ2V0VXNlck1lZGlhIiwiYXVkaW8iLCJ2aWRlbyIsInNyY09iamVjdCIsIm1lc3NhZ2UiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2V0QXVkaW9UcmFja3MiLCJmb3JFYWNoIiwidHJhY2siLCJlbmFibGVkIiwiaW5uZXJUZXh0IiwiZ2V0VmlkZW9UcmFja3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQSxNQUFNQSxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixRQUF4QixDQUFmO0FBQ0EsTUFBTUMsT0FBTyxHQUFHRixRQUFRLENBQUNDLGNBQVQsQ0FBd0IsTUFBeEIsQ0FBaEI7QUFDQSxNQUFNRSxTQUFTLEdBQUdILFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixRQUF4QixDQUFsQjtBQUVBLElBQUlHLFFBQUo7QUFDQSxJQUFJQyxLQUFLLEdBQUcsS0FBWjtBQUNBLElBQUlDLFNBQVMsR0FBRyxLQUFoQjs7QUFFQSxlQUFlQyxVQUFmLEdBQTRCO0FBQzFCLE1BQUk7QUFDRixVQUFNQyxPQUFPLEdBQUdDLFNBQVMsQ0FBQ0MsWUFBVixDQUF1QkMsZ0JBQXZCLEVBQWhCO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTCxPQUFaO0FBQ0QsR0FIRCxDQUdFLE9BQU9NLENBQVAsRUFBVTtBQUNWRixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsQ0FBWjtBQUNEO0FBQ0Y7O0FBRUQsZUFBZUMsUUFBZixHQUEwQjtBQUN4QixNQUFJO0FBQ0ZYLElBQUFBLFFBQVEsR0FBRyxNQUFNSyxTQUFTLENBQUNDLFlBQVYsQ0FBdUJNLFlBQXZCLENBQW9DO0FBQ25EQyxNQUFBQSxLQUFLLEVBQUUsSUFENEM7QUFFbkRDLE1BQUFBLEtBQUssRUFBRTtBQUY0QyxLQUFwQyxDQUFqQjtBQUlBbkIsSUFBQUEsTUFBTSxDQUFDb0IsU0FBUCxHQUFtQmYsUUFBbkI7QUFDQSxVQUFNRyxVQUFVLEVBQWhCO0FBQ0QsR0FQRCxDQU9FLE9BQU9PLENBQVAsRUFBVTtBQUNWRixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsQ0FBQyxDQUFDTSxPQUFkO0FBQ0Q7QUFDRjs7QUFFREwsUUFBUTtBQUVSYixPQUFPLENBQUNtQixnQkFBUixDQUF5QixPQUF6QixFQUFrQyxNQUFNO0FBQ3RDakIsRUFBQUEsUUFBUSxDQUFDa0IsY0FBVCxHQUEwQkMsT0FBMUIsQ0FBbUNDLEtBQUQsSUFBVztBQUMzQ0EsSUFBQUEsS0FBSyxDQUFDQyxPQUFOLEdBQWdCLENBQUNELEtBQUssQ0FBQ0MsT0FBdkI7QUFDRCxHQUZEOztBQUdBLE1BQUksQ0FBQ3BCLEtBQUwsRUFBWTtBQUNWSCxJQUFBQSxPQUFPLENBQUN3QixTQUFSLEdBQW9CLFFBQXBCO0FBQ0FyQixJQUFBQSxLQUFLLEdBQUcsSUFBUjtBQUNELEdBSEQsTUFHTztBQUNMSCxJQUFBQSxPQUFPLENBQUN3QixTQUFSLEdBQW9CLE1BQXBCO0FBQ0FyQixJQUFBQSxLQUFLLEdBQUcsS0FBUjtBQUNEO0FBQ0YsQ0FYRDtBQVlBRixTQUFTLENBQUNrQixnQkFBVixDQUEyQixPQUEzQixFQUFvQyxNQUFNO0FBQ3hDakIsRUFBQUEsUUFBUSxDQUFDdUIsY0FBVCxHQUEwQkosT0FBMUIsQ0FBbUNDLEtBQUQsSUFBVztBQUMzQ0EsSUFBQUEsS0FBSyxDQUFDQyxPQUFOLEdBQWdCLENBQUNELEtBQUssQ0FBQ0MsT0FBdkI7QUFDRCxHQUZEOztBQUdBLE1BQUksQ0FBQ25CLFNBQUwsRUFBZ0I7QUFDZEgsSUFBQUEsU0FBUyxDQUFDdUIsU0FBVixHQUFzQixnQkFBdEI7QUFDQXBCLElBQUFBLFNBQVMsR0FBRyxJQUFaO0FBQ0QsR0FIRCxNQUdPO0FBQ0xILElBQUFBLFNBQVMsQ0FBQ3VCLFNBQVYsR0FBc0IsaUJBQXRCO0FBQ0FwQixJQUFBQSxTQUFTLEdBQUcsS0FBWjtBQUNEO0FBQ0YsQ0FYRDs7In0=
